import Head from 'next/head';
import styles from '@/styles/Home.module.scss';
import { gql, wpgraphql } from '../../lib/wpgrapghql';
import { useState } from 'react';
import { NextPageContext } from 'next';
import Image from 'next/image';
import Footer from "@/components/Footer";
import Carousel from '@/components/Carousel/Carousel';
import timeLineImage from '../../assets/timeline-image.png';
import homeIcon from '../../assets/home-icon.svg';
import bgPrev from '../../assets/bgPrev.png';
import bgNext from '../../assets/bgNext.png';

import { Swiper, SwiperSlide } from 'swiper/react';
import Slider from "react-slick";

import "slick-carousel/slick/slick.css";
import "slick-carousel/slick/slick-theme.css";

// Import Swiper styles
// import 'react-slick/css';
import CarouselSecond from '@/components/Carousel-second/CarouselSecond';
import CarouselThird from '@/components/CarouselThird/CarouselThird';
import Link from 'next/link';
import Header from '@/components/Header/Header';

const GetAllPosts = gql`
  query getPosts {
    posts {
      nodes {
        id
        slug
        title
        uri
      }
    }
  }
`;

// const data = wpgraphql.request(GetAllPosts);

// const getAllPosts = async () => {
//   const { posts } = await wpgraphql.request(GetAllPosts);
//   console.log(posts);
//   return posts;
// };

// getAllPosts();

type One = {
  posts: Nodes
}

type Nodes = {
  nodes: Posts
}

type Posts = {
  map(arg0: (post: { title: string; id: string; }) => JSX.Element): import("react").ReactNode;
  length: number;
  id: string
  slug: string
  title: string
  uri: string
}

interface PostsPageProps {
  posts:One;
}

export default function Third({ posts: serverPosts }: PostsPageProps) {

  const timeline = [1890, 2023];
  const timelineDecades: any[] | (() => any[]) = [];
  // const [tDecades, setTDecades] = useState([1890, 1900, 1910, 1920, 1930, 1940, 1950, 1960, 1970, 1980, 1990, 2000, 2010, 2020]); 
  const [tDecades, setTDecades] = useState(timelineDecades); 
  const [pointsTimeline, setPointsTimeine] = useState([1895, 1896, 1916, 2013]);

  // for (let i = timeline[0]; i <= timeline[1]; i++) {
  //   if(i % 10 === 0){
  //     timelineDecades.push(i);
  //   }
  // }

  for (let i = timeline[0]; i <= timeline[1]; i++) {
      timelineDecades.push(i);
  }

  console.log('timelineDecades', timelineDecades);

  const settings = {
    dots: false,
    infinite: true,
    speed: 500,
    slidesToShow: 12,
    slidesToScroll: 1
  };

  const [currentIndex, setCurrentIndex] = useState(Math.round(tDecades.length / 2 / 10))
  // const [currentIndex, setCurrentIndex] = useState(0)

  const next = () => {
    // if (currentIndex < (length - 1)) {
        setCurrentIndex(prevState => prevState + 1)
    // }
}

const prev = () => {
    // if (currentIndex > 0) {
        setCurrentIndex(prevState => prevState - 1)
    // }

}

  const [touchPosition, setTouchPosition] = useState(null)

  const handleTouchStart = (e: any) => {
    const touchDown = e.touches[0].clientX
    setTouchPosition(touchDown)
}


  const handleTouchMove = (e:any) => {
    const touchDown = touchPosition

    if(touchDown === null) {
        return
    }

    const currentTouch = e.touches[0].clientX
    const diff = touchDown - currentTouch
  

    if (diff > 5) {
        next()
        console.log('diff > 5');
        
    }

    if (diff < -5) {
        prev()
        console.log('diff < -5');
    }

    setTouchPosition(null)
}

console.log('currentIndex', currentIndex);

  

  return (
    <>
      <Head>
        <title>Thomas F Meagher</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
        <link rel="manifest" href="/manifest.json" />
      </Head>
      <main className="third-page" >  
      <Header />
        
        <div 
          className="timeline"
          onTouchStart={handleTouchStart}
          onTouchMove={handleTouchMove}
        >
          <div className="timeline-years">
            {tDecades.map((decade, index) => (
              decade % 10 === 0
              ? <div key={decade} className={`year year-${index} ${currentIndex === index && 'active'}`} 
              // style={
              //   currentIndex > 0 
              //   ? { transform: `translateX(-${(currentIndex * 100)}%)`, transitionProperty: 'transform',
              //   transitionDuration: '0.5s'}
              //   : { transform: `translateX(${-currentIndex * 100}%)`, transitionProperty: 'transform',
              //   transitionDuration: '0.5s'}
              //   }
              >
                <h2>{decade}</h2>
                {/* {
                  currentIndex === index &&
                  <Image src={timeLineImage} alt=''/>
                } */}
                
                <div className="timeline-line">
                  <svg width="100%" height="100%"><line x1="85" y1="100" x2="85" y2="250" stroke="white" strokeWidth="5"></line></svg>
                </div>
              </div>
              : <div key={decade} 
                  style={
                    !pointsTimeline.includes(decade)
                    ? {
                      position: 'absolute'
                    }
                    : {
                      position: 'relative',
                      display: 'flex',
                      alignItems: 'end',
                      width: '20px'
                    } 
                }
                >
                  {pointsTimeline.includes(decade) && 
                  <p>d</p>
                  }
                </div>
            ))}
          </div>
          <div className="timeline-line-bottom">
            <svg width="100%" height="100%"><line x1="0" y1="0" x2="100%" y2="0" stroke="white" strokeWidth="20"></line></svg>
          </div>
        </div>
        {/* <CarouselSecond /> */}
        {/* <div style={{width: '100%'}}>
          <Slider {...settings}>
            {timelineDecades.map(decade => (
              <div key={decade} className="year">
                <h2>{decade}</h2>
                <div className="timeline-line">
                  <svg width="" height="100%"><line x1="85" y1="100" x2="85" y2="250" stroke="white" stroke-width="5"></line></svg>
                </div>
              </div>
            ))}
          </Slider>
        </div> */}
        {/* <CarouselThird
                show={13}
                infiniteLoop
                timelineDecades={timelineDecades}
            >
              {timelineDecades.map(decade => (
              <div key={decade} className="year" style={{ transform: `translateX(-${currentIndex * 100}%)` }}>
                <h2>{decade}</h2>
                <div className="timeline-line">
                  <svg width="100%" height="100%"><line x1="85" y1="100" x2="85" y2="250" stroke="white" strokeWidth="5"></line></svg>
                </div>
              </div>
            ))}
        </CarouselThird> */}
        <Footer 
          prevLink={'/second'} 
          nextLink={'/fourth'}
          prevImage={bgPrev.src.toString()}
          nextImage={bgNext.src.toString()}
        />
      </main>
    </>
  );
}

export async function getServerSideProps({}: NextPageContext) {
  const posts: any = await wpgraphql.request(GetAllPosts);

  return {
    props: {posts},
  }
}
